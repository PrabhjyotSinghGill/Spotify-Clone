{"version":3,"sources":["Components/spotify.js","Components/Login.js","Components/SidebarOption.js","Components/DataLayer.js","Components/Sidebar.js","Components/Header.js","Components/SongRow.js","Components/Body.js","Components/Footer.js","Components/Player.js","App.js","serviceWorker.js","Components/reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOption","title","Icon","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","album","artists","artist","Body","spotify","discover_weekly","description","fontSize","tracks","item","Footer","Grid","container","spacing","xs","Slider","Player","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","response","Boolean","hostname","match","state","action","console","log","ReactDOM","render","StrictMode","playing","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.def6d011.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst redirectUri = \"http://localhost:3000/\";\nconst clientId = \"ef26af98a43c49ffbb5ce4085869bd1f\";\n\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nexport const getTokenFromUrl = () => {\n  return window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      let parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n\n      return initial;\n    }, {});\n};\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true}`;\n","import React from \"react\";\nimport \"../Views/Login.css\";\nimport { loginUrl } from \"./spotify\";\n\nfunction Login() {\n  return (\n    <div className=\"login\">\n      <h3>Login Page</h3>\n      <img\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n        alt=\"\"\n      ></img>\n      <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\n    </div>\n  );\n}\nexport default Login;\n","import React from \"react\";\nimport \"../Views/SidebarOption.css\";\n\nfunction SidebarOption({ title, Icon }) {\n  return (\n    <div className=\"sidebarOption\">\n      {Icon && <Icon className=\"sidebarOption_icon\"></Icon>}\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\n    </div>\n  );\n}\n\nexport default SidebarOption;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const DataLayerContext = createContext();\nexport const DataLayer = ({ initialState, reducer, children }) => (\n  <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </DataLayerContext.Provider>\n);\nexport const useDataLayerValue = () => useContext(DataLayerContext);\n","import React from \"react\";\nimport \"../Views/Sidebar.css\";\nimport SidebarOption from \"./SidebarOption\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\nimport { useDataLayerValue } from \"../Components/DataLayer\";\n\nfunction Sidebar() {\n  const [{ playlists }, dispatch] = useDataLayerValue();\n  return (\n    <div className=\"sidebar\">\n      <img\n        className=\"sidebar_logo\"\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n        alt=\"\"\n      ></img>\n      <SidebarOption Icon={HomeIcon} title=\"Home\"></SidebarOption>\n      <SidebarOption Icon={SearchIcon} title=\"Search\"></SidebarOption>\n      <SidebarOption Icon={LibraryMusicIcon} title=\"Library\"></SidebarOption>\n      <br></br>\n      <strong className=\"sidebar_title\">PLAYLISTS</strong>\n      <hr></hr>\n\n      {playlists?.items?.map((playlist) => (\n        <SidebarOption title={playlist.name}></SidebarOption>\n      ))}\n    </div>\n  );\n}\nexport default Sidebar;\n","import React from \"react\";\nimport \"../Views/Header.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Avatar } from \"@material-ui/core\";\nimport { useDataLayerValue } from \"../Components/DataLayer\";\n\nfunction Header() {\n  const [{ user }, dispatch] = useDataLayerValue();\n\n  return (\n    <div className=\"header\">\n      <div className=\"header_left\">\n        <SearchIcon></SearchIcon>\n        <input placeholder=\"Search for Artists, Songs\" type=\"text\"></input>\n      </div>\n\n      <div className=\"header_right\">\n        <Avatar src={user?.images[0]?.url} alt={user?.display_name}></Avatar>\n        <h4>{user?.display_name}</h4>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"../Views/SongRow.css\";\n\nfunction SongRow({ track = \"test\" }) {\n  return (\n    <div className=\"songRow\">\n      <img\n        className=\"songRow_album\"\n        src={track.album.images[0].url}\n        alt=\"\"\n      ></img>\n      <div className=\"songRow_info\">\n        <h1>{track.name}</h1>\n        <p>\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\n          {track.album.name}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default SongRow;\n","import React from \"react\";\nimport \"../Views/Body.css\";\nimport Header from \"../Components/Header\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport SongRow from \"../Components/SongRow\";\n\nfunction Body({ spotify }) {\n  const [{ discover_weekly }, dispatch] = useDataLayerValue();\n\n  return (\n    <div className=\"body\">\n      <Header spotify={spotify}></Header>\n      <div className=\"body_info\">\n        <img src={discover_weekly?.images[0].url} alt=\"\"></img>\n        <div className=\"body_infoText\">\n          <strong>Playlist</strong>\n          <h2>Discover Weekly</h2>\n          <p>{discover_weekly?.description}</p>\n        </div>\n      </div>\n      <div className=\"body_songs \">\n        <div className=\"body_icons\">\n          <PlayCircleFilledIcon className=\"body_shuffle\"></PlayCircleFilledIcon>\n          <FavoriteIcon fontSize=\"large\"></FavoriteIcon>\n          <MoreHorizIcon></MoreHorizIcon>\n        </div>\n        {/*List of Songs*/}\n        {discover_weekly?.tracks.items.map((item) => (\n          <SongRow track={item.track}></SongRow>\n        ))}\n      </div>\n    </div>\n  );\n}\nexport default Body;\n","import React from \"react\";\nimport \"../Views/Footer.css\";\nimport PlayCircleOutlineOutlinedIcon from \"@material-ui/icons/PlayCircleOutlineOutlined\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport { Grid, Slider } from \"@material-ui/core\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"footer_left\">\n        <img\n          className=\"footer_albumLogo\"\n          src=\"https://pbs.twimg.com/profile_images/1226991892857884672/70shiuOh_400x400.jpg\"\n          alt=\"\"\n        ></img>\n        <div className=\"footer_songInfo\">\n          <h4>Yeah!</h4>\n          <p>Usher</p>\n        </div>\n      </div>\n      <div className=\"footer_center\">\n        <ShuffleIcon className=\"footer_green\"></ShuffleIcon>\n        <SkipPreviousIcon className=\"footer_icon\"></SkipPreviousIcon>\n        <PlayCircleOutlineOutlinedIcon\n          fontSize=\"large\"\n          className=\"footer_icon\"\n        ></PlayCircleOutlineOutlinedIcon>\n        <SkipNextIcon className=\"footer_icon\"></SkipNextIcon>\n        <RepeatIcon className=\"footer_green\"></RepeatIcon>\n      </div>\n      <div className=\"footer_right\">\n        <Grid container spacing={2}>\n          <Grid item>\n            <PlaylistPlayIcon className=\"footer_icon\"></PlaylistPlayIcon>\n          </Grid>\n          <Grid item>\n            <VolumeDownIcon className=\"footer_icon\"></VolumeDownIcon>\n          </Grid>\n          <Grid item xs>\n            <Slider></Slider>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\nexport default Footer;\n","import React from \"react\";\nimport \"../Views/Player.css\";\nimport Sidebar from \"./Sidebar\";\nimport Body from \"./Body\";\nimport Footer from \"./Footer\";\n\nfunction Player({ spotify }) {\n  return (\n    <div className=\"player\">\n      <div className=\"player_body \">\n        <Sidebar></Sidebar>\n        <Body spotify={spotify}></Body>\n      </div>\n\n      <Footer></Footer>\n    </div>\n  );\n}\nexport default Player;\n","import React, { useEffect, useState } from \"react\";\nimport Login from \"./Components/Login\";\nimport \"./App.css\";\nimport { getTokenFromUrl } from \"./Components/spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./Components/Player\";\nimport { useDataLayerValue } from \"./Components/DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.setAccessToken(_token);\n\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n      spotify.getPlaylist(\"0KYBgpgHjNjT1G24DSA4jG\").then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {token ? <Player spotify={spotify}></Player> : <Login> </Login>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\n  user: null,\n  playlists: [],\n  playing: false,\n  item: null,\n  //Set token to null after debugging!\n  //token:\"BQDJ3Xb7f9tLpfjFn -QGez8qXEgB9o4nD_iECwKfFeclYRtgQCOxNwsU982lpH6kCp3CZWMhk1W2_2sq26Xy9teHGx -dOkREUVV4s6oips8gnZc73178wQKhp1vXObfg3poI -Ca -VFT9t4f4pJ3AGjwQh3JPA0JDyVy1NQdGsHKuW0DN\",\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      };\n    case \"SET_TOKEN\":\n      return {\n        ...state,\n        token: action.token,\n      };\n    case \"SET_PLAYLISTS\":\n      return {\n        ...state,\n        playlists: action.playlists,\n      };\n    case \"SET_DISCOVER_WEEKLY\":\n      return {\n        ...state,\n        discover_weekly: action.discover_weekly,\n      };\n\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { DataLayer } from \"./Components/DataLayer\";\nimport reducer, { initialState } from \"./Components/reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}